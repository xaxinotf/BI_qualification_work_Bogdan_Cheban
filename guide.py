import dash
import dash_bootstrap_components as dbc
from dash import html, dcc, Input, Output, State, callback_context


# —Å—Ç–∏–ª—ñ —Ç–∞ –¥–æ–ø–æ–º—ñ–∂–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó


OLIVE_FALLBACK       = "#556b2f"
OLIVE_LIGHT_FALLBACK = "#829661"

GUIDE_STYLE = dcc.Markdown(
    f"""
<style>
:root {{
  --g-primary:       var(--color-olive-500, {OLIVE_FALLBACK});
  --g-primary-light: var(--color-olive-300, {OLIVE_LIGHT_FALLBACK});
  --g-bg:            var(--color-gray-50,  #f1f1f1);
  --g-shadow:        rgba(0,0,0,0.35);
}}

/* —Ç–ª–æ –ø—ñ–¥ —á–∞—Å —Ç—É—Ä—É */
.guide-active::before {{
  content: ''; position: fixed; inset: 0;
  background: var(--g-shadow);
  backdrop-filter: blur(3px);
  z-index: 999;
}}

/* –ø—ñ–¥—Å–≤—ñ—á–µ–Ω–∞ —Ü—ñ–ª—å */
.guide-highlight {{
  position: relative !important; z-index: 1000 !important;
  box-shadow: 0 0 0 6px var(--g-primary)88, 0 0 30px var(--g-primary)BB;
  border-radius: 8px;
  transition: transform .3s, box-shadow .3s;
}}
.guide-highlight:hover {{ transform: scale(1.03); }}

/* –≤—ñ–∫–Ω–æ –∑ –æ–ø–∏—Å–æ–º –∫—Ä–æ–∫—É */
.popover {{
  max-width: 500px;
  border: 2px solid var(--g-primary);
  border-radius: 1rem;
  background: var(--color-white, #fff);
  box-shadow: 0 16px 48px rgba(0,0,0,0.2);
  animation: fadeSlide 0.4s ease both;
  font-family: 'Montserrat', sans-serif;
}}
.popover-header {{
  background: var(--g-primary);
  color: var(--color-white, #fff);
  font-size: 1.1rem;
  font-weight: 600;
}}
.popover-body {{
  font-size: 1rem;
  line-height: 1.6;
  color: var(--color-gray-900, #171717);
}}
@keyframes fadeSlide {{
  from {{ opacity: 0; transform: translateY(-12px); }}
  to   {{ opacity: 1; transform: none; }}
}}

/* –∫–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫—É —Ç—É—Ä—É */
#guide-start {{
  width: 3.5rem; height: 3.5rem;
  font-size: 1.75rem;
  border-radius: 50%;
  background: var(--g-primary);
  color: var(--color-white, #fff);
  box-shadow: 0 6px 16px rgba(0,0,0,0.3);
  transition: transform .2s;
}}
#guide-start:hover {{ transform: scale(1.15); }}

/* –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó –≤ popover */
.guide-ctrl {{ min-width: 6rem; font-size: .85rem; }}
</style>
""",
    dangerously_allow_html=True,
    style={"display": "none"},
)


def S(title: str, body: str, target: str, placement: str = "auto") -> dict:
    """–°—Ç–≤–æ—Ä—é—î —Å–ª–æ–≤–Ω–∏–∫ –∫—Ä–æ–∫—É —Ç—É—Ä—É –∑ –∑–∞–≥–æ–ª–æ–≤–∫–æ–º, –æ–ø–∏—Å–æ–º, —Ü—ñ–ª–ª—é —Ç–∞ –ø–æ–∑–∏—Ü—ñ—é–≤–∞–Ω–Ω—è–º."""
    return {"title": title, "body": body, "target": target, "placement": placement}


# –∫—Ä–æ–∫–∏ —Ç—É—Ä—É: —Å–ø–æ—á–∞—Ç–∫—É –∫–æ–∂–Ω–∞ –≤–∫–ª–∞–¥–∫–∞ –º–µ–Ω—é, –ø–æ—Ç—ñ–º –¥–µ—Ç–∞–ª—å–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏


tab_steps = [
    ("üìä –ê–Ω–∞–ª—ñ—Ç–∏–∫–∞",          "–ö–ª—é—á–æ–≤—ñ –≥—Ä–∞—Ñ—ñ–∫–∏, –∫–æ—Ä–µ–ª—è—Ü—ñ—ó, KPI —Ç–∞ —à–≤–∏–¥–∫—ñ —Ñ—ñ–ª—å—Ç—Ä–∏.",                   "sidebar-tabs", "right"),
    ("üåü –ó—ñ—Ä–∫–æ–≤–∞ —Å—Ö–µ–º–∞",       "–Ü–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞ OLAP‚Äë–º–æ–¥–µ–ª—å (—Ñ–∞–∫—Ç/–≤–∏–º—ñ—Ä–∏) –∑ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—é drill-down.",        "sidebar-tabs", "right"),
    ("üìä –°–µ–≥–º–µ–Ω—Ç–∞—Ü—ñ—è –¥–æ–Ω–æ—Ä—ñ–≤", "K‚ÄëMeans –∫–ª–∞—Å—Ç–µ—Ä–∏ –¥–æ–Ω–æ—Ä—ñ–≤: —Å—É–º–∏, —Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—å, –ø—Ä–æ—Ñ—ñ–ª—ñ –≥—Ä—É–ø.",              "sidebar-tabs", "right"),
    ("üîÆ –ü—Ä–æ–≥–Ω–æ–∑—É–≤–∞–Ω–Ω—è",       "Prophet‚Äë–º–æ–¥–µ–ª—å: –Ω–∞–ª–∞—à—Ç—É–π—Ç–µ –≥–æ—Ä–∏–∑–æ–Ω—Ç —Ç–∞ –ø–æ–¥–∏–≤—ñ—Ç—å—Å—è –º–∞–π–±—É—Ç–Ω—ñ —Ç–µ–Ω–¥–µ–Ω—Ü—ñ—ó.",  "sidebar-tabs", "right"),
    ("üéØ –ö–µ—Ä—É–≤–∞–Ω–Ω—è KPI",       "–í—Å—Ç–∞–Ω–æ–≤–ª—é–π—Ç–µ —Ü—ñ–ª—å–æ–≤—ñ –ø–æ–∫–∞–∑–Ω–∏–∫–∏ –π –ø–æ—Ä—ñ–≤–Ω—é–π—Ç–µ –∑ —Ñ–∞–∫—Ç–∏—á–Ω–∏–º–∏ –¥–∞–Ω–∏–º–∏.",      "sidebar-tabs", "right"),
    ("üìù –ó–∞–ø–∏—Ç–∏",              "–ú–µ—Ç—Ä–∏–∫–∏ –∑–∞—è–≤–æ–∫ –ø–æ –≤—ñ–π—Å—å–∫–æ–≤–∏—Ö –±—Ä–∏–≥–∞–¥–∞—Ö —ñ–∑ –≤–∏–±–æ—Ä–æ–º –ø–æ–∫–∞–∑–Ω–∏–∫—ñ–≤.",         "sidebar-tabs", "right"),
    ("üì¶ –ê–Ω–∞–ª—ñ–∑ —Ç–æ–≤–∞—Ä—ñ–≤",       "–ü–æ–ø—É–ª—è—Ä–Ω—ñ—Å—Ç—å —ñ —Å—É–º–∏ –∑–∞—è–≤–æ–∫ –∑–∞ –Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–æ—é —Ç–æ–≤–∞—Ä—ñ–≤.",                 "sidebar-tabs", "right"),
    ("ü§ù –í–æ–ª–æ–Ω—Ç–µ—Ä—Å—å–∫–∏–π –∞–Ω–∞–ª—ñ–∑", "–†–µ–ø—É—Ç–∞—Ü—ñ–π–Ω—ñ –∫–ª–∞—Å—Ç–µ—Ä–∏ —Ç–∞ —Ç–æ–ø‚Äë—Å–ª–æ–≤–∞ —É –≤–æ–ª–æ–Ω—Ç–µ—Ä—Å—å–∫–∏—Ö –≤—ñ–¥–≥—É–∫–∞—Ö.",      "sidebar-tabs", "right"),
    ("üí∞ –ê–Ω–∞–ª—ñ–∑ –∑–±–æ—Ä—ñ–≤",        "–ï—Ñ–µ–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –∫–∞–º–ø–∞–Ω—ñ–π —Ç–∞ –∫–æ—Ä–µ–ª—è—Ü—ñ—ó –º—ñ–∂ –º–µ—Ç—Ä–∏–∫–∞–º–∏ –∑–±–æ—Ä—ñ–≤.",            "sidebar-tabs", "right"),
    ("üìÜ Retention Cohorts",    "–£—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–æ–Ω–æ—Ä—ñ–≤ —É —á–∞—Å—ñ: –Ω–∞–ª–∞—à—Ç—É–π—Ç–µ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∏ –∫–æ–≥–æ—Ä—Ç —Ç–∞ –º—ñ–Ω. —Ä–æ–∑–º—ñ—Ä.",  "sidebar-tabs", "right"),
    ("‚ö†Ô∏è Churn Prediction",     "–ü—Ä–æ–≥–Ω–æ–∑ –≤—ñ–¥—Ç–æ–∫—É: ROC‚Äë–º–æ–¥–µ–ª—å —Ç–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –¥–ª—è —Ä–∏–∑–∏–∫–æ–≤–∏—Ö –¥–æ–Ω–æ—Ä—ñ–≤.",    "sidebar-tabs", "right"),
]

detail_steps = [
    ("üéõ –§—ñ–ª—å—Ç—Ä–∏ –∞–Ω–∞–ª—ñ—Ç–∏–∫–∏",    "–§—ñ–ª—å—Ç—Ä—É–π—Ç–µ —Ä–æ–ª—å —Ç–∞ —Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—å –ø–µ—Ä–µ–±—É–≤–∞–Ω–Ω—è –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –∞–Ω–∞–ª—ñ–∑—É.",           "role-filter", "right"),
    ("üìà –°–µ—Ä–µ–¥–Ω—ñ–π –¥–æ–Ω–∞—Ç vs —á–∞—Å", "–ì—Ä–∞—Ñ—ñ–∫: –¥–Ω—ñ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ñ (X) vs —Å–µ—Ä–µ–¥–Ω—ñ–π –¥–æ–Ω–∞—Ç (Y), –∫–æ–ª—ñ—Ä ‚Äî —Ä–æ–ª—å.", "scatter-graph", "bottom"),
    ("üåê OLAP –≤—É–∑–æ–ª",           "–ö–ª–∞—Ü–Ω—ñ—Ç—å –≤—É–∑–æ–ª –Ω–∞ –∑—ñ—Ä–∫–æ–≤—ñ–π —Å—Ö–µ–º—ñ –¥–ª—è –¥–µ—Ç–∞–ª—ñ–∑–∞—Ü—ñ—ó —Ñ–∞–∫—Ç-—Ç–∞–±–ª–∏—Ü—ñ.",         "star-schema", "bottom"),
    ("üî¢ –§—ñ–ª—å—Ç—Ä –∫–ª–∞—Å—Ç–µ—Ä—ñ–≤",     "–û–±–µ—Ä—ñ—Ç—å –∫–ª–∞—Å—Ç–µ—Ä–∏ –Ω–∞ –¥–∞—à–±–æ—Ä–¥—ñ —Å–µ–≥–º–µ–Ω—Ç–∞—Ü—ñ—ó –¥–æ–Ω–æ—Ä—ñ–≤.",                  "cluster-filter", "right"),
    ("üìÖ –ì–æ—Ä–∏–∑–æ–Ω—Ç –ø—Ä–æ–≥–Ω–æ–∑—É",     "–ü–µ—Ä–µ—Ç—è–≥–Ω—ñ—Ç—å —Å–ª–∞–π–¥–µ—Ä, —â–æ–± –∑–º—ñ–Ω–∏—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –¥–Ω—ñ–≤ —É –ø—Ä–æ–≥–Ω–æ–∑—ñ.",           "forecast-horizon-slider", "bottom"),
    ("‚öôÔ∏è –û–Ω–æ–≤–∏—Ç–∏ KPI",          "–ü—ñ—Å–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è –Ω–æ–≤–∏—Ö —Ü—ñ–ª–µ–π –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É.",  "update-kpi-btn", "left"),
    ("üìä –ú–µ—Ç—Ä–∏–∫–∞ –∑–∞—è–≤–æ–∫",        "–í–∏–±–µ—Ä—ñ—Ç—å: –∫—ñ–ª—å–∫—ñ—Å—Ç—å, –∑–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞ –∞–±–æ —Å–µ—Ä–µ–¥–Ω—è —Å—É–º–∞ –∑–∞—è–≤–∫–∏.",        "request-metric-dropdown", "right"),
    ("üîç –§—ñ–ª—å—Ç—Ä —Ç–æ–≤–∞—Ä—ñ–≤",        "–®—É–∫–∞–π—Ç–µ –∑–∞ –∫–ª—é—á–æ–≤–∏–º —Å–ª–æ–≤–æ–º —É —Ç–µ–º—ñ –∑–∞–ø–∏—Ç—É.",                      "product-topic-filter", "right"),
    ("ü§ñ –ö–ª–∞—Å—Ç–µ—Ä –≤–æ–ª–æ–Ω—Ç–µ—Ä—ñ–≤",    "–ù–∞–≤–µ–¥—ñ—Ç—å –Ω–∞ —Ç–æ—á–∫—É, —â–æ–± –ø–æ–±–∞—á–∏—Ç–∏ —Ä–µ–ø—É—Ç–∞—Ü—ñ—é —Ç–∞ —Ç–æ–Ω–∞–ª—å–Ω—ñ—Å—Ç—å.",     "volunteer-scatter", "bottom"),
    ("üìà –¢—Ä–µ–Ω–¥ –∑–±–æ—Ä—ñ–≤",          "–¢—Ä–µ–Ω–¥ –ø–æ —Å—É–º–∞—Ö –∑–±–æ—Ä—ñ–≤ –∑ —á–∞—Å–æ–º.",                                 "levy-scatter", "bottom"),
    ("üìä Cohort controls",       "–ù–∞–ª–∞—à—Ç—É–π—Ç–µ max –∫–æ–≥–æ—Ä—Ç–∏ —Ç–∞ –º—ñ–Ω—ñ–º—É–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤.",                  "cohort-max-periods", "right"),
    ("üìâ ROC –∫—Ä–∏–≤–∞",             "–û—Ü—ñ–Ω—ñ—Ç—å —è–∫—ñ—Å—Ç—å –º–æ–¥–µ–ª—ñ –≤—ñ–¥—Ç–æ–∫—É.",                                 "churn-roc-curve", "left"),
]

GUIDE_STEPS = [*map(lambda x: S(*x), tab_steps), *map(lambda x: S(*x), detail_steps)]


# –º–∞–∫–µ—Ç —Ç–∞ –∫–æ–ª–±–µ–∫–∏ (–±–µ–∑ –∑–º—ñ–Ω)


GUIDE_LAYOUT = html.Div([
    GUIDE_STYLE,
    dcc.Store(id="guide-step", data=-1),
    dbc.Button("‚ùì", id="guide-start", color="success", className="position-fixed top-0 end-0 m-3 zindex-tooltip", title="–®–≤–∏–¥–∫–∞ –µ–∫—Å–∫—É—Ä—Å—ñ—è"),
    dbc.Popover(
        id="guide-popover",
        is_open=False,
        target="guide-dummy",
        placement="auto",
        hide_arrow=False,
        class_name="popover",
        children=[
            dbc.PopoverHeader(id="guide-popover-title", className="fw-bold"),
            dbc.PopoverBody(id="guide-popover-body"),
            html.Div([
                dbc.Button("‚Üê¬†–ù–∞–∑–∞–¥", id="guide-back", size="sm", className="guide-ctrl me-2 btn-outline-secondary"),
                dbc.Button("–î–∞–ª—ñ¬†‚Üí", id="guide-next", size="sm", color="primary", className="guide-ctrl"),
                dbc.Button("√ó¬†–ó–∞–≤–µ—Ä—à–∏—Ç–∏", id="guide-finish", size="sm", color="danger", className="ms-2 guide-ctrl"),
            ], className="d-flex justify-content-end mt-3"),
        ],
    ),
    html.Div(id="guide-dummy", style={"display": "none"}),
])


def register_guide(app: dash.Dash):
    # –Ω–∞–≤—ñ–≥–∞—Ü—ñ—è –º—ñ–∂ –∫—Ä–æ–∫–∞–º–∏ —Ç—É—Ä—É
    @app.callback(
        Output("guide-popover", "is_open"), Output("guide-popover", "target"), Output("guide-popover", "placement"),
        Output("guide-popover-title", "children"), Output("guide-popover-body", "children"), Output("guide-step", "data"),
        Output("guide-back", "disabled"), Output("guide-next", "disabled"), Output("guide-finish", "style"),
        Input("guide-start", "n_clicks"), Input("guide-next", "n_clicks"), Input("guide-back", "n_clicks"), Input("guide-finish", "n_clicks"),
        State("guide-step", "data"), prevent_initial_call=True
    )
    def _nav(start, nxt, back, fin, step):
        btn = callback_context.triggered[0]["prop_id"].split('.')[0]
        if btn == "guide-start":
            step = 0
        elif btn == "guide-next":
            step += 1
        elif btn == "guide-back":
            step = max(step - 1, 0)
        elif btn == "guide-finish":
            return (False, dash.no_update, dash.no_update, dash.no_update, dash.no_update, -1, True, True, {"display": "none"})
        if step < 0 or step >= len(GUIDE_STEPS):
            return (False, dash.no_update, dash.no_update, dash.no_update, dash.no_update, -1, True, True, {"display": "none"})
        info = GUIDE_STEPS[step]
        return (
            True,
            info['target'],
            info.get('placement','auto'),
            info['title'],
            info['body'],
            step,
            step == 0,
            step == len(GUIDE_STEPS) - 1,
            {"display": "inline-block"} if step == len(GUIDE_STEPS) - 1 else {"display": "none"}
        )

    # –ø—ñ–¥—Å–≤—ñ—á—É–≤–∞–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ—ó —Ü—ñ–ª—ñ
    for tid in {s['target'] for s in GUIDE_STEPS}:
        def mk(t=tid):
            @app.callback(Output(t, 'className', allow_duplicate=True), Input('guide-step','data'), State(t,'className'), prevent_initial_call=True)
            def hl(step, cls):
                classes = [c for c in (cls or '').split() if c!='guide-highlight']
                if 0<=step<len(GUIDE_STEPS) and GUIDE_STEPS[step]['target']==t: classes.append('guide-highlight')
                return ' '.join(classes)
        mk()

    # –¥–æ–¥–∞–≤–∞–Ω–Ω—è/–∑–Ω—è—Ç—Ç—è overlay –∫–ª–∞—Å—É –Ω–∞ <body>
    app.clientside_callback(
        "function(o){document.body.classList.toggle('guide-active',o);return ''}",
        Output('guide-dummy','children'), Input('guide-popover','is_open')
    )
